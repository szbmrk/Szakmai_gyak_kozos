-- Create the database
CREATE DATABASE elearning_portal;

-- Use the database
USE elearning_portal;

-- Create the Teacher table
CREATE TABLE Teacher (
    teacher_id INT AUTO_INCREMENT PRIMARY KEY,
    teacher_name VARCHAR(100) NOT NULL,
    teacher_email VARCHAR(100) NOT NULL,
    specialty VARCHAR(100),
	teacher_password VARCHAR(100) NOT NULL
);

-- Create the Course table
CREATE TABLE Course (
    course_id INT AUTO_INCREMENT PRIMARY KEY,
    course_name VARCHAR(100) NOT NULL,
    course_description TEXT,
    teacher_id INT NOT NULL,
    FOREIGN KEY (teacher_id) REFERENCES Teacher(teacher_id)
);

-- Create the Student table
CREATE TABLE Student (
    student_id INT AUTO_INCREMENT PRIMARY KEY,
    student_name VARCHAR(100) NOT NULL,
    student_email VARCHAR(100) NOT NULL,
    student_password VARCHAR(100) NOT NULL,
    student_enrollment_date DATE
);

-- Create the Assignments table
CREATE TABLE Assignments (
    assignment_id INT PRIMARY KEY AUTO_INCREMENT,
    title VARCHAR(100),
    description TEXT,
    course_id INT,
    FOREIGN KEY (course_id) REFERENCES course(course_id)
);

-- Create the Enrollment table
CREATE TABLE Enrollment (
    enrollment_id INT AUTO_INCREMENT PRIMARY KEY,
    course_id INT NOT NULL,
    student_id INT NOT NULL,
    enrollment_date DATE,
    FOREIGN KEY (course_id) REFERENCES Course(course_id),
    FOREIGN KEY (student_id) REFERENCES Student(student_id)
);
-- Teacher table data
INSERT INTO Teacher (teacher_name, teacher_email, specialty, teacher_password)
VALUES
('John Smith', 'johnsmith@example.com', 'Software Engineering', 'password1'),
('Jane Doe', 'janedoe@example.com', 'Computer Science', 'password2'),
('David Johnson', 'davidjohnson@example.com', 'Web Development', 'password3'),
('Sarah Williams', 'sarahwilliams@example.com', 'Database Management', 'password4'),
('Michael Brown', 'michaelbrown@example.com', 'Mobile App Development', 'password5');

-- Sample data for Course table:
INSERT INTO Course (course_name, course_description, teacher_id)
VALUES
('Introduction to Software Engineering', 'An overview of software engineering principles and practices.', 1),
('Object-Oriented Programming', 'Learn the fundamentals of object-oriented programming concepts.', 2),
('Web Development Basics', 'Introduction to web development technologies and techniques.', 3),
('Database Management Systems', 'Study various aspects of database management systems.', 4),
('Mobile App Development', 'Learn how to develop mobile applications for iOS and Android platforms.', 5);

-- Student table data
INSERT INTO Student (student_name, student_email, student_password, student_enrollment_date)
VALUES
('Emily Johnson', 'emilyjohnson@example.com', 'password6', '2022-01-10'),
('Matthew Davis', 'matthewdavis@example.com', 'password7', '2022-02-15'),
('Olivia Wilson', 'oliviawilson@example.com', 'password8', '2022-03-20'),
('Daniel Taylor', 'danieltaylor@example.com', 'password9', '2022-04-25'),
('Sophia Anderson', 'sophiaanderson@example.com', 'password10', '2022-05-30');

-- Assignments table data
INSERT INTO Assignments (title, description, course_id)
VALUES
('Assignment 1', 'Implement a basic software application using Java.', 1),
('Assignment 2', 'Design and implement a class hierarchy for a banking system.', 1),
('Assignment 1', 'Create a simple website using HTML and CSS.', 3),
('Assignment 2', 'Develop a dynamic web application using JavaScript and PHP.', 3);

-- Enrollment table data
INSERT INTO Enrollment (course_id, student_id, enrollment_date)
VALUES
(1, 1, '2022-01-11'),
(1, 2, '2022-01-11'),
(1, 3, '2022-01-12'),
(2, 2, '2022-02-16'),
(2, 3, '2022-02-16'),
(3, 3, '2022-03-21'),
(3, 4, '2022-03-22');

UPDATE `teacher` SET `teacher_password` = 'password1' WHERE `teacher`.`teacher_id` = 1;
UPDATE `teacher` SET `teacher_password` = 'password2' WHERE `teacher`.`teacher_id` = 2;
UPDATE `teacher` SET `teacher_password` = 'password3' WHERE `teacher`.`teacher_id` = 3;
ALTER TABLE `teacher` CHANGE `teacher_password` `teacher_password` VARCHAR(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL;

ALTER TABLE `course` DROP FOREIGN KEY `course_ibfk_1`; ALTER TABLE `course` ADD CONSTRAINT `course_ibfk_1` FOREIGN KEY (`teacher_id`) REFERENCES `teacher`(`teacher_id`) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE `enrollment` DROP FOREIGN KEY `enrollment_ibfk_1`; ALTER TABLE `enrollment` ADD CONSTRAINT `enrollment_ibfk_1` FOREIGN KEY (`course_id`) REFERENCES `course`(`course_id`) ON DELETE CASCADE ON UPDATE CASCADE; ALTER TABLE `enrollment` DROP FOREIGN KEY `enrollment_ibfk_2`; ALTER TABLE `enrollment` ADD CONSTRAINT `enrollment_ibfk_2` FOREIGN KEY (`student_id`) REFERENCES `student`(`student_id`) ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE Assignments ADD deadline DATE;
-- Create 'states' table to store different names for assignment states
CREATE TABLE states (
    state_id INT AUTO_INCREMENT PRIMARY KEY,
    state_name VARCHAR(50) NOT NULL
);

-- Insert some example states into the 'states' table
INSERT INTO states (state_name) VALUES
    ('submitted'),
    ('graded'),
    ('late'),
    ('pending');

-- Create 'assignment_state' table that references the 'states' table
CREATE TABLE assignment_state (
    assignment_state_id INT AUTO_INCREMENT PRIMARY KEY,
    student_id INT,
    assignment_id INT,
    state_id INT,
    FOREIGN KEY (student_id) REFERENCES Student(student_id),
    FOREIGN KEY (assignment_id) REFERENCES Assignments(assignment_id),
    FOREIGN KEY (state_id) REFERENCES states(state_id)
);


CREATE TABLE course_contents (
    content_id INT AUTO_INCREMENT PRIMARY KEY,
    course_id INT,
    lecture_text TEXT,
    FOREIGN KEY (course_id) REFERENCES course(course_id)
);

ALTER TABLE states
ADD COLUMN permission BOOLEAN;

UPDATE states
SET permission = 
    CASE 
        WHEN state_name IN ('submitted', 'pending') THEN FALSE
        WHEN state_name IN ('graded', 'late') THEN TRUE
        ELSE permission
    END;

UPDATE `assignments` SET `deadline` = '2023-07-31' WHERE `assignments`.`assignment_id` = 1;
UPDATE `assignments` SET `deadline` = '2023-07-31' WHERE `assignments`.`assignment_id` = 2;
UPDATE `assignments` SET `deadline` = '2023-07-31' WHERE `assignments`.`assignment_id` = 3;
UPDATE `assignments` SET `deadline` = '2023-07-31' WHERE `assignments`.`assignment_id` = 4;

ALTER TABLE `course_contents` ADD `title` VARCHAR(100) NOT NULL AFTER `lecture_text`;
ALTER TABLE `assignment_state` CHANGE `state_id` `state_id` INT(11) NULL DEFAULT '4';

ALTER TABLE `assignments` DROP FOREIGN KEY `assignments_ibfk_1`; ALTER TABLE `assignments` ADD CONSTRAINT `assignments_ibfk_1` FOREIGN KEY (`course_id`) REFERENCES `course`(`course_id`) ON DELETE CASCADE ON UPDATE RESTRICT;
ALTER TABLE `assignment_state` DROP FOREIGN KEY `assignment_state_ibfk_1`; ALTER TABLE `assignment_state` ADD CONSTRAINT `assignment_state_ibfk_1` FOREIGN KEY (`student_id`) REFERENCES `student`(`student_id`) ON DELETE CASCADE ON UPDATE RESTRICT; ALTER TABLE `assignment_state` DROP FOREIGN KEY `assignment_state_ibfk_2`; ALTER TABLE `assignment_state` ADD CONSTRAINT `assignment_state_ibfk_2` FOREIGN KEY (`assignment_id`) REFERENCES `assignments`(`assignment_id`) ON DELETE CASCADE ON UPDATE RESTRICT; ALTER TABLE `assignment_state` DROP FOREIGN KEY `assignment_state_ibfk_3`; ALTER TABLE `assignment_state` ADD CONSTRAINT `assignment_state_ibfk_3` FOREIGN KEY (`state_id`) REFERENCES `states`(`state_id`) ON DELETE CASCADE ON UPDATE RESTRICT;